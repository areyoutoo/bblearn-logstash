input {
	redis {
		host => "127.0.0.1"
		data_type => "list"
		key => "logstash"
	}
}

filter {

	if ("bbaccess" == [type]) {
		grok {
			patterns_dir => "./patterns"
			match => [
				"message",
				"%{LOG_BBACCESS}"
			]
			remove_field => "message"
		}
		
		date {
			match => [
				"timestamp",
				"dd/MMM/YYYY:HH:mm:ss Z"
			]
		}
		
		
	} else if ("bbauth" == [type]) {
		grok {
			patterns_dir => "./patterns"
			match => [
				"message", 
				"%{LOG_BBAUTH}" 
			]
			overwrite => "message"
		}

		date {
			match => [ 
				"timestamp", 
				"MMM dd YYYY HH:mm:ss.SSS z" 
			]
			timezone => "America/Los_Angeles"
		}
		
		
	} else if ("bbservices" == [type]) {		
		grok {
			patterns_dir => "./patterns"
			match => [
				"message",
				"%{LOG_BBSERVICE}"
			]
			add_field => [
				"stacktrace",
				[message]
			]
			overwrite => "message"
		}
		
		date {
			match => [ 
				"timestamp", 
				"YYYY-MM-dd HH:mm:ss Z" 
			]
		}
	
	
	} else if ("bbgc" == [type]) {
		grok {
			patterns_dir => "./patterns"
			match => [
				"message", "%{GCLOG_MARKSTART}",
				"message", "%{GCLOG_MARKABORT}",
				"message", "%{GCLOG_MARKFINISH}",
				"message", "%{GCLOG_MARK}",
				"message", "%{GCLOG_COLLECT}",
				"message", "%{GCLOG_RESCAN}"
			]
			overwrite => "message"
		}
		
		date {
			match => [ 
				"timestamp",
				"ISO8601" 
			]
		}
		
		if ([gc_mem_young_before] =~ /.+/) {
			if ([gc_time_rescan] =~ /.+/) {
				mutate {
					add_tag => "bbgc-rescan"
				}
			} else {
				mutate {
					add_tag => "bbgc-collect"
				}
			}
		}
		
		if ([message] =~ /abort preclean due to/) {
			mutate {
				add_tag => "bbgc-abort"
			}
		}
		
		if ([gc_event] =~ /preclean/) {
			mutate {
				add_tag => "bbgc-preclean"
			}
		}
		
		if ([gc_event] =~ /concurrent/) {
			mutate {
				add_tag => "bbgc-concurrent"
			}
		}
		
		#TODO: add tagging based on slow responses?
		
		
	}
}

output {
	elasticsearch_http {
		host => "127.0.0.1"
		flush_size => 1
	}
	
	#TODO: statsd output?
}